@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("admin"))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout">
                <button id="logout" type="submit" class="nav-link text-dark bg-light rounded border border-warning mr-md-2">Logout</button>
            </form>
        </li>
        @*<li class="nav-item">
            <a class="nav-link text-dark bg-light rounded border border-warning mr-md-2" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>*@
    }
    else if (User.IsInRole("attendance"))
    {
        //show nothing
    }
    else
    {
        @*<li class="nav-item">
            <a class="nav-link text-dark bg-light rounded border border-warning mr-md-2" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>*@
        <li class="nav-item">
            <a class="nav-link text-dark bg-light rounded border border-warning mr-md-2" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }

</ul>
